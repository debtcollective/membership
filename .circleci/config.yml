---

version: 2.1
executors:
  docker-publisher:
    working_directory: ~/membership
    environment:
      IMAGE_NAME: debtcollective/membership

    docker:
      - image: circleci/buildpack-deps:stretch
orbs:
  aws-cli: circleci/aws-cli@0.1.15
jobs:
  test:
    working_directory: ~/membership
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
        environment:
          PGHOST: localhost
          PGUSER: membership
          RAILS_ENV: test
          DATABASE_URL: postgres://membership:letmein@localhost/membership_test?pool=5
      - image: postgres:12
        environment:
          POSTGRES_USER: membership
          POSTGRES_DB: membership_test
          POSTGRES_PASSWORD: "letmein"
    steps:
      - checkout

      - run:
          name: configure bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - restore_cache:
          keys:
            - membership-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}

      - run:
          name: install dependencies
          command: |
            bundle install --path vendor/bundle
            yarn install

      - run:
          name: wait for postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: dotenv
          command: cp .env.sample .env

      - run:
          command: bundle exec rake db:setup

      - run:
          name: run tests
          command: bundle exec rspec spec

      - save_cache:
          key: membership-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/membership/vendor/bundle
            - ~/membership/node_modules
            - ~/.cache/yarn
            - ~/.cache/Cypress

      - store_artifacts:
          path: coverage
  e2e:
    working_directory: ~/membership
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
        environment:
          PGHOST: localhost
          PGUSER: membership
          RAILS_ENV: test
          DATABASE_URL: postgres://membership:letmein@localhost/membership_test?pool=5
      - image: postgres:12
        environment:
          POSTGRES_USER: membership
          POSTGRES_DB: membership_test
          POSTGRES_PASSWORD: "letmein"
    steps:
      - checkout

      - run:
          name: configure bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - restore_cache:
          keys:
            - membership-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}

      - run:
          name: install dependencies
          command: |
            bundle install --path vendor/bundle
            yarn install

      - run:
          name: wait for postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: dotenv
          command: cp .env.sample .env

      - run:
          command: bundle exec rake db:setup

      - run:
          name: run e2e tests
          command: bundle exec rake cypress:run
          environment:
            CYPRESS_RAILS_CYPRESS_OPTS: --record

      - save_cache:
          key: membership-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/membership/vendor/bundle
            - ~/membership/node_modules
            - ~/.cache/yarn
            - ~/.cache/Cypress

      - store_artifacts:
          path: coverage

  build:
    executor: docker-publisher
    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true

      - run:
          name: build image
          command: |
            export IMAGE_TAG=$(echo $CIRCLE_SHA1 | cut -c -7)
            docker build \
              --build-arg sentry_release=$IMAGE_TAG \
              --build-arg sentry_auth_token=$SENTRY_AUTH_TOKEN \
              -t debtcollective/membership:$IMAGE_TAG .

      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME

      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  release:
    working_directory: ~/membership
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
    steps:
      - checkout

      # debt-bot ssh key
      - add_ssh_keys:
          fingerprints:
            - "90:19:0a:60:b7:db:f6:43:89:09:32:c2:95:c6:67:7f"

      - run:
          name: configure git
          command: |
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            touch ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git config user.email "bot@debtcollective.org"
            git config user.name "debt-bot"

      - run:
          name: Github release with semantic release
          command: |
            yarn install
            yarn semantic-release

  publish_latest:
    executor: docker-publisher
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: load archived Docker image
          command: docker load -i /tmp/workspace/image.tar

      - run:
          name: login docker registry
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - run:
          name: push image to hub.docker.io
          command: |
            export IMAGE_TAG=$(echo $CIRCLE_SHA1 | cut -c -7)
            make push tag=$IMAGE_TAG

            docker tag debtcollective/membership:$IMAGE_TAG debtcollective/membership:latest
            make push

  publish_development:
    executor: docker-publisher
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: load archived Docker image
          command: docker load -i /tmp/workspace/image.tar

      - run:
          name: login docker registry
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - run:
          name: push image to hub.docker.io
          command: |
            export IMAGE_TAG=$(echo $CIRCLE_SHA1 | cut -c -7)
            make push tag=$IMAGE_TAG

            docker tag debtcollective/membership:$IMAGE_TAG debtcollective/membership:development
            make push tag=development

  deploy_stage:
    working_directory: ~/membership
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
    environment:
      ECS_CLUSTER: test
      ECS_SERVICE: membership
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/configure

      # restore cache
      - restore_cache:
          keys:
            - membership-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
            - membership-{{ checksum "Gemfile.lock" }}
            - membership-

      - run:
          name: configure bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: install dependencies
          command: |
            bundle install --path vendor/bundle

      - run:
          name: Migrate database
          command: |
            bundle exec ruby scripts/ecs_db_migrate.rb

      - run:
          name: Deploy task with new version
          command: |
            export AWS_DEFAULT_REGION=$AWS_STAGE_DEFAULT_REGION
            aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment

  deploy_prod:
    working_directory: ~/membership
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
    environment:
      ECS_CLUSTER: prod
      ECS_SERVICE: membership
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/configure

      # restore cache
      - restore_cache:
          keys:
            - membership-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
            - membership-{{ checksum "Gemfile.lock" }}
            - membership-

      - run:
          name: configure bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: install dependencies
          command: |
            bundle install --path vendor/bundle

      - run:
          name: Migrate database
          command: |
            bundle exec ruby scripts/ecs_db_migrate.rb

      - run:
          name: Deploy task with new version
          command: |
            aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
workflows:
  version: 2
  pipeline:
    jobs:
      - test
      - e2e
      - build:
          requires:
            - test
            - e2e
          filters:
            branches:
              only: [master, development]
      - publish_latest:
          requires:
            - build
          filters:
            branches:
              only: [master]
      - publish_development:
          requires:
            - build
          filters:
            branches:
              only: [development]
      - release:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy_stage:
          requires:
            - publish_development
          filters:
            branches:
              only: development
      - deploy_prod_approval:
          type: approval
          requires:
            - publish_latest
          filters:
            branches:
              only: master
      - deploy_prod:
          requires:
            - deploy_prod_approval
          filters:
            branches:
              only: master
